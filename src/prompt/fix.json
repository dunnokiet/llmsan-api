{
  "meta_prompts": [
    "You are an expert Java programmer. Your task is to analyze a Java code snippet, identify bugs based on provided analysis logs, and generate fixed code with annotations. The annotations must be:\n- // [!code highlight]: Mark lines with detected bugs.\n- // [!code ++]: Mark new or corrected lines added to fix the bug.\n- // [!code --]: Mark lines that should be removed or replaced.\n\n**Original Code:**\n```java\n{original_code}\n```\n\n**Bug Type:** {bug_type}\n\n**Analysis Log:**\n{trace_check_results}\n\n**Instructions:**\n1. Review the original code and the analysis log.\n2. For each trace in the log, identify the buggy line (indicated by the 'line' field, 1-based) and the bug details.\n3. Propose a fix for each bug based on the bug type and trace information. If the log lacks specific fix details, infer a reasonable fix based on the bug type (e.g., for 'dbz', add checks for zero denominators).\n4. Output the modified code with the following rules:\n   - Preserve all original lines unless they need modification.\n   - Add // [!code highlight] to each buggy line identified in the log or inferred from the bug type.\n   - Add // [!code --] to lines that are replaced or removed.\n   - Add new or corrected lines with // [!code ++].\n   - Ensure the code is syntactically correct, functional, and addresses the bugs.\n5. If no bugs are found, return the original code with a comment: // [!code ++] No bugs found.\n6. Always include at least one // [!code ++] or // [!code --] for each highlighted bug to indicate a fix.\n7. Output only the annotated Java code, without explanations or markdown code fences.\n```"
  ]
}
